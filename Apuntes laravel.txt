<?php

namespace App\Http\Controllers;

use App\Models\Apuntes;
use App\Models\Contenidos;
use App\Models\TipoApuntes;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;




class ApuntesController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $datos['apuntes']=Apuntes::orderBy('id','ASC')->paginate(25);
        /*$datos2['contenidos']=Contenidos::all();
        $datos3['tipoapuntes']=TipoApuntes::all();*/
        //dd($datos3);

        return view('apuntes.index',$datos);
    }

   /*  public function index2()
    {
        $datos['apuntes'] = DB::table('apuntes')
                ->join('tipo_apuntes','apuntes.tipo','=','tipo_apuntes.id')
                ->join('contenidos','apuntes.contenido_id','=','contenidos.id')
                ->select('apuntes.*','tipo_apuntes.nombre','contenidos.nombre')
                ->get();

        $datos1['contenidos']=Contenidos::orderBy('id','ASC');
        $datos2['tipoapuntes']=TipoApuntes::orderBy('id','ASC');
        $datos3 = Contenidos::all();
        $datos4 = TipoApuntes::all();

        return view('apuntes.form', compact($datos3, $datos4));

        return view('category.index')->with($categories)->with($products);
        return view('apuntes.form',  compact($datos1, $datos2));
        return view('apuntes.form')->with($datos1)->with($datos2);
        return view('apuntes.form')->with('contenidos')->with('tipoapuntes');
    } 
    */

    public function indexController()
    {
        $datos['contenidos']=Contenidos::orderBy('id','ASC')->paginate(25);
        return view('apuntes.create', $datos);
 
    }

    public function indexTipoApunte()
    {
        $datos['tipoapuntes']=TipoApuntes::orderBy('id','ASC')->paginate(25);
        return view('apuntes.create', $datos);
    }




    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('apuntes.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        /*$datosApuntes = request()->except('_token');
        Apuntes::insert($datosApuntes);*/
        
        $request->validate([
            'nombre'=>'required',
            'url'=>'required',
            'contenido_id'=>'required',
            'tipo'=>'required'
        ]);

        $apuntes = new Apuntes([
            'nombre'=> $request->get('nombre'),
            'url'=> $request->get('url'),
            'contenido_id'=> $request->get('contenido_id'),
            'tipo'=> $request->get('tipo')
        ]);
        $apuntes->save();

        return redirect('/apuntes')->with('mensaje','Apunte Agregado con exito');


    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Apuntes  $apuntes
     * @return \Illuminate\Http\Response
     */
    public function show(Apuntes $apuntes)
    {
        $contenidos=Contenidos::orderBy('id','ASC');
        $tipoapuntes=TipoApuntes::orderBy('id','ASC');

        return view('apuntes.create', compact('contenidos','tipoapuntes'));


    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Apuntes  $apuntes
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $apuntes=Apuntes::findOrFail($id);
        return view('apuntes.edit', compact('apuntes'));
    }
    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Apuntes  $apuntes
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request,  $id)
    {
        $datosApuntes = request()->except('_token','_method');
        Apuntes::where('id','=',$id)->update($datosApuntes);

        $apuntes=Apuntes::findOrFail($id);
        return view('apuntes.edit', compact('apuntes'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Apuntes  $apuntes
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        Apuntes::destroy($id);
        return redirect('apuntes')->with('mensaje','Apunte Borrado con exito');
    }
}
